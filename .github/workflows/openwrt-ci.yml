#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
name: OpenWrt-CI
on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Costom configure file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译MT7628NN固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt76x8=y
          CONFIG_TARGET_ramips_mt76x8_DEVICE_xiaomi_miwifi-nano=y
          CONFIG_HAS_SUBTARGETS=y
          CONFIG_HAS_DEVICES=y
          CONFIG_TARGET_BOARD="ramips"
          CONFIG_TARGET_SUBTARGET="mt76x8"
          CONFIG_TARGET_PROFILE="DEVICE_xiaomi_miwifi-nano"
          CONFIG_TARGET_ARCH_PACKAGES="mipsel_24kc"
          CONFIG_DEFAULT_TARGET_OPTIMIZATION="-Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc"
          CONFIG_CPU_TYPE="24kc"
          CONFIG_TARGET_ROOTFS_INITRAMFS=y
          CONFIG_TARGET_INITRAMFS_COMPRESSION_LZMA=y
          CONFIG_EXTERNAL_CPIO=""
          CONFIG_TARGET_ROOTFS_SQUASHFS=y
          CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          CONFIG_TARGET_UBIFS_JOURNAL_SIZE=""
          CONFIG_IPV6=y
          CONFIG_BINARY_FOLDER=""
          CONFIG_DOWNLOAD_FOLDER=""
          CONFIG_LOCALMIRROR=""
          CONFIG_AUTOREBUILD=y
          CONFIG_BUILD_SUFFIX=""
          CONFIG_TARGET_ROOTFS_DIR=""
          CONFIG_EXTERNAL_KERNEL_TREE=""
          CONFIG_KERNEL_GIT_CLONE_URI=""
          CONFIG_BUILD_LOG_DIR=""
          CONFIG_EXTRA_OPTIMIZATION="-fno-caller-saves -fno-plt"
          CONFIG_TARGET_OPTIMIZATION="-Os -pipe -mno-branch-likely -mips32r2 -mtune=24kc"
          CONFIG_SOFT_FLOAT=y
          CONFIG_USE_MIPS16=y
          CONFIG_EXTRA_BINUTILS_CONFIG_OPTIONS=""
          CONFIG_EXTRA_GCC_CONFIG_OPTIONS=""
          CONFIG_GDB=y
          CONFIG_USE_MUSL=y
          CONFIG_SSP_SUPPORT=y
          CONFIG_BINUTILS_VERSION_2_31_1=y
          CONFIG_BINUTILS_VERSION="2.31.1"
          CONFIG_GCC_VERSION="8.4.0"
          CONFIG_LIBC="musl"
          CONFIG_TARGET_SUFFIX="musl"
          CONFIG_TARGET_PREINIT_SUPPRESS_STDERR=y
          CONFIG_TARGET_PREINIT_TIMEOUT=2
          CONFIG_TARGET_PREINIT_IFNAME=""
          CONFIG_TARGET_PREINIT_IP="192.168.99.1"
          CONFIG_TARGET_PREINIT_NETMASK="255.255.255.0"
          CONFIG_TARGET_PREINIT_BROADCAST="192.168.99.255"
          CONFIG_TARGET_INIT_PATH="/usr/sbin:/usr/bin:/sbin:/bin"
          CONFIG_TARGET_INIT_ENV=""
          CONFIG_TARGET_INIT_CMD="/sbin/init"
          CONFIG_TARGET_INIT_SUPPRESS_STDERR=y
          CONFIG_PER_FEED_REPO=y
          CONFIG_FEED_packages=y
          CONFIG_FEED_luci=y
          CONFIG_FEED_routing=y
          CONFIG_FEED_telephony=y
          CONFIG_FEED_freifunk=y
          CONFIG_FEED_helloworld=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vsftpd-zh-cn=y
          CONFIG_PACKAGE_openssh-keygen=y
          CONFIG_PACKAGE_openssh-server=y
          CONFIG_PACKAGE_openssh-sftp-server=y          
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
      - name: Assemble artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./artifact/
